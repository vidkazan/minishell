Index: execution/exit_status.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#include \"../main.h\"\n\nint error_code_transform()\n{\n    if(errno == 2) // command not found\n        return 127;\n    if(errno == 13) // permission denied\n        return 126;\n    return 0;\n}\n\nvoid exit_code_print(t_elem *elem, int write_fd)\n{\n    if(elem->data->exit_status > 255)\n        elem->data->exit_status = elem->data->exit_status % 255;\n    ft_putnbr_fd(elem->data->exit_status, write_fd);\n}\n\nvoid    builtin_exit(t_elem *elem)\n{\n    long long code;\n    int i = -1;\n\n    if(elem->cmd[2])\n    {\n        builtins_error(elem,\"exit\", NULL, \"too many arguments\", 0);\n        exit(1);\n    }\n    if(!elem->cmd[1] || !*elem->cmd[1])\n    {\n        ft_putendl_fd(\"exit\",2);\n        exit(0);\n    }\n    else\n    {\n        if(elem->cmd[1][i + 1] && elem->cmd[1][i + 1] == '-')\n            i++;\n        while(elem->cmd[1][++i])\n        {\n            if(!ft_isdigit(elem->cmd[1][i]))\n            {\n                builtins_error(elem,\"exit\", NULL, \"numeric argument required\", 0);\n                exit(255);\n            }\n        }\n    }\n    code = ft_atoi_overflow(elem->cmd[1]);\n    if(elem->data->debug)\n        dprintf(2,\"%llu\\n\",code);\n    if(code == 255)\n    {\n        builtins_error(elem,\"exit\", NULL, \"numeric argument required\", 0);\n        exit(255);\n    }\n    ft_putendl_fd(\"exit\",2);\n    exit(code);\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/execution/exit_status.c b/execution/exit_status.c
--- a/execution/exit_status.c	(revision 6853f6dd6b6bbb8d73fe6b8052566bba0a3219be)
+++ b/execution/exit_status.c	(date 1636389531180)
@@ -21,16 +21,16 @@
     long long code;
     int i = -1;
 
-    if(elem->cmd[2])
-    {
-        builtins_error(elem,"exit", NULL, "too many arguments", 0);
-        exit(1);
-    }
     if(!elem->cmd[1] || !*elem->cmd[1])
     {
         ft_putendl_fd("exit",2);
         exit(0);
     }
+    if(elem->cmd[2])
+    {
+        builtins_error(elem,"exit", NULL, "too many arguments", 0);
+        exit(1);
+    }
     else
     {
         if(elem->cmd[1][i + 1] && elem->cmd[1][i + 1] == '-')
Index: main.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#include \"main.h\"\n\n//rl_clear_history, rl_on_new_line,\n//rl_replace_line, rl_redisplay, add_history, printf,\n//malloc, free, write, open, read, close, fork, wait,\n//waitpid, wait3, wait4, signal, kill, exit, getcwd,\n//chdir, stat, lstat, fstat, unlink, execve, dup,\n//dup2, pipe, opendir, readdir, closedir, strerror,\n//perror, isatty, ttyname, ttyslot, ioctl, getenv,\n//tcsetattr, tcgetattr, tgetent, tgetflag, tgetnum,\n//tgetstr, tgoto, tputs\n\nvoid\tread_line_and_add_history(char **line)\n{\n\tif (*line)\n\t{\n\t\tfree(*line);\n\t\t*line = (char *)NULL;\n\t}\n\t*line = readline(\"minishell $> \");\n\tif (*line && **line)\n\t\tadd_history (*line);\n}\n\nint main(int ac, char **av, char **env) // not save if no ENVP\n{\n    t_data *data = malloc(sizeof (t_data));\n\tint     exit_flag = 0;\n\n    init(data, env);\n    data->envp = ft_arrdup(env);\n    data->exit_status = 0;\n    data->debug = 0;\n    data->exec = 1;\n    env_path_find(data);\n    rl_outstream = stderr;\n    if(ac == 2)\n        data->debug = 1;\n\twhile (!exit_flag)\n\t{\n\t\tread_line_and_add_history(&data->line);\n\t\t// ft_strip(&line);\n\t\tif (data->line && !ft_strncmp(data->line, \"exit\", 5))\n\t\t{\n            ft_putstr_fd(\"exit\\n\", 2);\n            exit_flag = 1;\n        }\n\t\telse if (ft_strlen(data->line) != 0)\n\t\t{\n\t\t\tmain_preparser(data, data->line);\n            while(data->elem_start->prev) // костыыыль\n                data->elem_start = data->elem_start->prev;\n            if(data->debug)\n                dprintf(2, \">>> %d REDIR_PROC_BEGIN\\n\", getpid());\n            redirects(data);\n            if(data->debug)\n                dprintf(2, \">>> %d EXEC_BEGIN\\n\", getpid());\n            execution(data->elem_start);\n            waiting(data);\n//            if(data->debug)\n//                print_elems(data->elem_start);\n\t\t\tdata_reboot(data, NULL, 0);\n\t\t}\n    }\n    closing(data);\n    return 0;\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main.c b/main.c
--- a/main.c	(revision 6853f6dd6b6bbb8d73fe6b8052566bba0a3219be)
+++ b/main.c	(date 1636390036243)
@@ -24,31 +24,24 @@
 
 int main(int ac, char **av, char **env) // not save if no ENVP
 {
-    t_data *data = malloc(sizeof (t_data));
-	int     exit_flag = 0;
+    t_data *data;
 
-    init(data, env);
-    data->envp = ft_arrdup(env);
-    data->exit_status = 0;
-    data->debug = 0;
-    data->exec = 1;
-    env_path_find(data);
-    rl_outstream = stderr;
+    data = malloc(sizeof (t_data));
+    start_init(data, env);
     if(ac == 2)
         data->debug = 1;
-	while (!exit_flag)
+	while (!data->exit_flag)
 	{
 		read_line_and_add_history(&data->line);
-		// ft_strip(&line);
-		if (data->line && !ft_strncmp(data->line, "exit", 5))
-		{
-            ft_putstr_fd("exit\n", 2);
-            exit_flag = 1;
-        }
-		else if (ft_strlen(data->line) != 0)
+//		if (data->line && !ft_strcmp(data->line, "exit")) // TODO #102 this exit doesnt handle exit code arguments
+//		{
+//            ft_putstr_fd("exit\n", 2);
+//            data->exit_flag = 1;
+//      }
+		if (ft_strlen(data->line) != 0)
 		{
 			main_preparser(data, data->line);
-            while(data->elem_start->prev) // костыыыль
+            while(data->elem_start->prev) // TODO #103 fix list creating
                 data->elem_start = data->elem_start->prev;
             if(data->debug)
                 dprintf(2, ">>> %d REDIR_PROC_BEGIN\n", getpid());
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"CMakeRunConfigurationManager\" shouldGenerate=\"true\" shouldDeleteObsolete=\"true\">\n    <generated>\n      <config projectName=\"minishell_new_pipes\" targetName=\"all\" />\n    </generated>\n  </component>\n  <component name=\"CMakeSettings\">\n    <configurations>\n      <configuration PROFILE_NAME=\"Debug\" CONFIG_NAME=\"Debug\" ENABLED=\"true\" />\n    </configurations>\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"05c57aff-0105-474e-9bec-95a3c37232f2\" name=\"Default Changelist\" comment=\"\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Makefile\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Makefile\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/arr_functions.c\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/arr_str_lst_functions/arr_functions.c\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/builtins_echo.c\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/builtins/builtins_echo.c\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/builtins_env.c\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/builtins/builtins_env.c\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/builtins_export_main.c\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/builtins/builtins_export_main.c\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/builtins_export_set.c\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/builtins/builtins_export_set.c\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/builtins_export_sorting.c\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/builtins/builtins_export_sorting.c\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/builtins_main.c\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/builtins/builtins_main.c\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/builtins_pwd_cd.c\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/builtins/builtins_pwd_cd.c\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/closing.c\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/execution/closing.c\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/error.c\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/execution/error.c\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/execution.c\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/execution/execution.c\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/exit_status.c\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/execution/exit_status.c\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/list_functions.c\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/arr_str_lst_functions/list_functions.c\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/path_finding.c\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/execution/path_finding.c\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/preparsing.c\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/parcing/preparsing.c\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/printing.c\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/execution/printing.c\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/redirects.c\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/redirects/redirects.c\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/redirects_di.c\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/redirects/redirects_di.c\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/redirects_do.c\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/redirects/redirects_do.c\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/redirects_si.c\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/redirects/redirects_si.c\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/redirects_so.c\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/redirects/redirects_so.c\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/str_functions.c\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/arr_str_lst_functions/str_functions.c\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"ClangdSettings\">\n    <option name=\"clangTidyViaClangd\" value=\"false\" />\n    <option name=\"formatViaClangd\" value=\"false\" />\n  </component>\n  <component name=\"ExternalProjectsData\">\n    <projectState path=\"$PROJECT_DIR$\">\n      <ProjectState />\n    </projectState>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n    <option name=\"ROOT_SYNC\" value=\"DONT_SYNC\" />\n  </component>\n  <component name=\"GitSEFilterConfiguration\">\n    <file-type-list>\n      <filtered-out-file-type name=\"LOCAL_BRANCH\" />\n      <filtered-out-file-type name=\"REMOTE_BRANCH\" />\n      <filtered-out-file-type name=\"TAG\" />\n      <filtered-out-file-type name=\"COMMIT_BY_MESSAGE\" />\n    </file-type-list>\n  </component>\n  <component name=\"MakefileLocalSettings\">\n    <option name=\"availableProjects\">\n      <map>\n        <entry>\n          <key>\n            <ExternalProjectPojo>\n              <option name=\"name\" value=\"minishell_new_pipes\" />\n              <option name=\"path\" value=\"$PROJECT_DIR$\" />\n            </ExternalProjectPojo>\n          </key>\n          <value>\n            <list>\n              <ExternalProjectPojo>\n                <option name=\"name\" value=\"minishell_new_pipes\" />\n                <option name=\"path\" value=\"$PROJECT_DIR$\" />\n              </ExternalProjectPojo>\n            </list>\n          </value>\n        </entry>\n      </map>\n    </option>\n    <option name=\"projectSyncType\">\n      <map>\n        <entry key=\"$PROJECT_DIR$\" value=\"RE_IMPORT\" />\n      </map>\n    </option>\n  </component>\n  <component name=\"ProjectId\" id=\"20d8vLUub1H20qWFrQ2VbHplaiy\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\n    <property name=\"RunOnceActivity.cidr.known.project.marker\" value=\"true\" />\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\n    <property name=\"cf.first.check.clang-format\" value=\"false\" />\n    <property name=\"cidr.known.project.marker\" value=\"true\" />\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$\" />\n    <property name=\"nodejs_package_manager_path\" value=\"npm\" />\n  </component>\n  <component name=\"RecentsManager\">\n    <key name=\"CopyFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$\" />\n    </key>\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/execution\" />\n      <recent name=\"$PROJECT_DIR$/parcing\" />\n      <recent name=\"$PROJECT_DIR$/arr_str_lst_functions\" />\n      <recent name=\"$PROJECT_DIR$\" />\n      <recent name=\"$PROJECT_DIR$/builtins\" />\n    </key>\n  </component>\n  <component name=\"RunManager\">\n    <configuration name=\"all\" type=\"CLionNativeAppRunConfigurationType\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"minishell_new_pipes\" TARGET_NAME=\"all\" CONFIG_NAME=\"all\" version=\"1\">\n      <method v=\"2\">\n        <option name=\"CLION.COMPOUND.BUILD\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration default=\"true\" type=\"GradleAppRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" PASS_PARENT_ENVS_2=\"true\">\n      <method v=\"2\">\n        <option name=\"com.jetbrains.cidr.cpp.gradle.execution.GradleNativeBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\n      </method>\n    </configuration>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"05c57aff-0105-474e-9bec-95a3c37232f2\" name=\"Default Changelist\" comment=\"\" />\n      <created>1636363334991</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1636363334991</updated>\n      <workItem from=\"1636363336844\" duration=\"1978000\" />\n      <workItem from=\"1636367177078\" duration=\"6609000\" />\n      <workItem from=\"1636374599548\" duration=\"1819000\" />\n      <workItem from=\"1636382241049\" duration=\"252000\" />\n      <workItem from=\"1636384146783\" duration=\"4467000\" />\n    </task>\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 6853f6dd6b6bbb8d73fe6b8052566bba0a3219be)
+++ b/.idea/workspace.xml	(date 1636390036348)
@@ -16,29 +16,12 @@
   <component name="ChangeListManager">
     <list default="true" id="05c57aff-0105-474e-9bec-95a3c37232f2" name="Default Changelist" comment="">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Makefile" beforeDir="false" afterPath="$PROJECT_DIR$/Makefile" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/arr_functions.c" beforeDir="false" afterPath="$PROJECT_DIR$/arr_str_lst_functions/arr_functions.c" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/builtins_echo.c" beforeDir="false" afterPath="$PROJECT_DIR$/builtins/builtins_echo.c" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/builtins_env.c" beforeDir="false" afterPath="$PROJECT_DIR$/builtins/builtins_env.c" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/builtins_export_main.c" beforeDir="false" afterPath="$PROJECT_DIR$/builtins/builtins_export_main.c" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/builtins_export_set.c" beforeDir="false" afterPath="$PROJECT_DIR$/builtins/builtins_export_set.c" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/builtins_export_sorting.c" beforeDir="false" afterPath="$PROJECT_DIR$/builtins/builtins_export_sorting.c" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/builtins_main.c" beforeDir="false" afterPath="$PROJECT_DIR$/builtins/builtins_main.c" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/builtins_pwd_cd.c" beforeDir="false" afterPath="$PROJECT_DIR$/builtins/builtins_pwd_cd.c" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/closing.c" beforeDir="false" afterPath="$PROJECT_DIR$/execution/closing.c" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/error.c" beforeDir="false" afterPath="$PROJECT_DIR$/execution/error.c" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/execution.c" beforeDir="false" afterPath="$PROJECT_DIR$/execution/execution.c" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/exit_status.c" beforeDir="false" afterPath="$PROJECT_DIR$/execution/exit_status.c" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/list_functions.c" beforeDir="false" afterPath="$PROJECT_DIR$/arr_str_lst_functions/list_functions.c" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/path_finding.c" beforeDir="false" afterPath="$PROJECT_DIR$/execution/path_finding.c" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/preparsing.c" beforeDir="false" afterPath="$PROJECT_DIR$/parcing/preparsing.c" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/printing.c" beforeDir="false" afterPath="$PROJECT_DIR$/execution/printing.c" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/redirects.c" beforeDir="false" afterPath="$PROJECT_DIR$/redirects/redirects.c" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/redirects_di.c" beforeDir="false" afterPath="$PROJECT_DIR$/redirects/redirects_di.c" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/redirects_do.c" beforeDir="false" afterPath="$PROJECT_DIR$/redirects/redirects_do.c" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/redirects_si.c" beforeDir="false" afterPath="$PROJECT_DIR$/redirects/redirects_si.c" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/redirects_so.c" beforeDir="false" afterPath="$PROJECT_DIR$/redirects/redirects_so.c" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/str_functions.c" beforeDir="false" afterPath="$PROJECT_DIR$/arr_str_lst_functions/str_functions.c" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/execution/exit_status.c" beforeDir="false" afterPath="$PROJECT_DIR$/execution/exit_status.c" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/execution/printing.c" beforeDir="false" afterPath="$PROJECT_DIR$/execution/printing.c" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/init.c" beforeDir="false" afterPath="$PROJECT_DIR$/init.c" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/main.c" beforeDir="false" afterPath="$PROJECT_DIR$/main.c" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/main.h" beforeDir="false" afterPath="$PROJECT_DIR$/main.h" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/minishell" beforeDir="false" afterPath="$PROJECT_DIR$/minishell" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -145,7 +128,7 @@
       <workItem from="1636367177078" duration="6609000" />
       <workItem from="1636374599548" duration="1819000" />
       <workItem from="1636382241049" duration="252000" />
-      <workItem from="1636384146783" duration="4467000" />
+      <workItem from="1636384146783" duration="5874000" />
     </task>
     <servers />
   </component>
Index: init.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#include \"main.h\"\n\n//rl_clear_history, rl_on_new_line,\n//rl_replace_line, rl_redisplay, add_history, printf,\n//malloc, free, write, open, read, close, fork, wait,\n//waitpid, wait3, wait4, signal, kill, exit, getcwd,\n//chdir, stat, lstat, fstat, unlink, execve, dup,\n//dup2, pipe, opendir, readdir, closedir, strerror,\n//perror, isatty, ttyname, ttyslot, ioctl, getenv,\n//tcsetattr, tcgetattr, tgetent, tgetflag, tgetnum,\n//tgetstr, tgoto, tputs\n\nvoid init(t_data *data, char **env)\n{\n    data->std_in = dup(0);\n    data->std_out = dup(1);\n    data->elem_start = NULL;\n    data->simple_redirect_input_fd = -1;\n    data->simple_redirect_output_fd = -1;\n    data->double_redirect_output_fd = -1;\n    data->double_redirect_input_fd = -1;\n//    env_path_find(data);\n\tdata->q1 = 0;\n\tdata->q2 = 0;\n}\n\nvoid\tdata_reboot(t_data *data, char *message, int mode)\n{\n\tif (mode)\n\t\tprintf(\"%s\\n\", message);\n\tlist_cleaner(data->elem_start);\n\tinit(data, data->envp);\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/init.c b/init.c
--- a/init.c	(revision 6853f6dd6b6bbb8d73fe6b8052566bba0a3219be)
+++ b/init.c	(date 1636389066733)
@@ -10,16 +10,31 @@
 //tcsetattr, tcgetattr, tgetent, tgetflag, tgetnum,
 //tgetstr, tgoto, tputs
 
+void start_init(t_data *data, char **env)
+{
+    data->elem_start = NULL;
+    data->simple_redirect_input_fd = -1;
+    data->simple_redirect_output_fd = -1;
+    data->double_redirect_output_fd = -1;
+    data->double_redirect_input_fd = -1;
+    data->q1 = 0;
+    data->q2 = 0;
+    data->envp = ft_arrdup(env);
+    data->exit_status = 0;
+    data->debug = 0;
+    data->exec = 1;
+    data->exit_flag = 0;
+    env_path_find(data);
+    rl_outstream = stderr;
+}
+
 void init(t_data *data, char **env)
 {
-    data->std_in = dup(0);
-    data->std_out = dup(1);
     data->elem_start = NULL;
     data->simple_redirect_input_fd = -1;
     data->simple_redirect_output_fd = -1;
     data->double_redirect_output_fd = -1;
     data->double_redirect_input_fd = -1;
-//    env_path_find(data);
 	data->q1 = 0;
 	data->q2 = 0;
 }
Index: main.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#ifndef MAIN_H\n#define MAIN_H\n\n# include <sys/wait.h>\n# include <sys/signal.h>\n#include <signal.h>\n# include <fcntl.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include <unistd.h>\n#include <curses.h>\n#include <term.h>\n#include <string.h>\n#include <sys/errno.h>\n#include \"libft/libft.h\"\n#include <dirent.h>\n#include <readline/readline.h>\n#include <readline/history.h>\n#include <curses.h>\n\n#define CMD 1\n#define PIPE 2\n#define SIMPLE_REDIRECT_INPUT 3\n#define SIMPLE_REDIRECT_OUTPUT 4\n#define DOUBLE_REDIRECT_INPUT 5\n#define DOUBLE_REDIRECT_OUTPUT 6\n\n\ntypedef struct s_data t_data;\n\ntypedef struct s_elem\n{\n    int type;\n    int is_builtin;\n    int pfd[2];\n    pid_t pid;\n    char **cmd;\n    char *cal;\n    struct s_elem *next;\n    struct s_elem *prev;\n    t_data  *data;\n}               t_elem;\n\ntypedef struct s_data\n{\n    char *path;\n    int std_in;\n    int std_out;\n    char **envp;\n    int exit_status;\n    t_elem *elem_start;\n    int simple_redirect_input_fd;\n    int simple_redirect_output_fd;\n    int double_redirect_output_fd;\n    int double_redirect_input_fd;\n    int debug;\n    int exec;\n    int q1;\n    int q2;\n    char *line;\n}              t_data;\n\n// init and close\n\nvoid    data_reboot(t_data *data, char *message, int mode);\nvoid    init(t_data *data, char **env);\nvoid    closing(t_data *data);\n\n// exec\n\nvoid close_fd(t_elem *elem);\nvoid execution(t_elem *elem);\nvoid waiting(t_data *data);\n\n\n// finding\n\nvoid\tenv_path_find(t_data *data);\nvoid\tfind_path(t_elem *elem);\nchar\t*search_strings_in_array(char **arr, char *search_word, int *index);\n\n// redirects\n\nvoid    redirects(t_data *data);\nt_elem\t*double_redirect_output(t_elem\t*elem);\nt_elem\t*simple_redirect_input(t_elem *elem);\nt_elem\t*simple_redirect_output(t_elem *elem);\nt_elem *double_redirect_input(t_elem *elem);\n\n\n// parsing\n\nvoid\tmain_preparser(t_data *data, char *line);\n\n// exit status\n\nvoid execve_error(t_elem *elem, char *cmd, char *arg, char *msg);\nvoid exit_code_print(t_elem *elem, int write_fd);\nint error_code_transform();\n\n\n// list functions\n\nvoid\tlist_cleaner(t_elem *elem);\nt_elem \t*delete_current_node(t_elem\t*elem);\nt_elem  *create_elem(t_data *data);\nt_elem  *push_back(t_elem *ptr, t_data *data);\nvoid    print_current_elem(t_elem *ptr,int id);\nvoid    print_elems(t_elem *ptr);\n\n// utils\n\nint         ft_strlen_arr(char **arr);\nchar        **ft_arrjoin(char **s1, char **s2);\nchar        **ft_arrjoin_one_line(char **envp,char *new_arr);\nint         ft_strcmp(const char *s1, const char *s2);\nlong long\tft_atoi_overflow(const char *str);\nchar        **ft_arrdup(char **env);\nvoid        free_arr(char **str);\n\n// builtin functions\n\nint     builtin_fd_gen(t_elem *elem);\nvoid    builtin_exec(t_elem *elem);\nvoid    builtin_check(t_elem *elem);\nvoid    builtins_error(t_elem *elem, char *cmd, char *arg, char *msg, int code);\nvoid    builtin_exit(t_elem *elem);\nvoid    builtin_unset(t_elem *elem);\nvoid    builtin_check(t_elem *elem);\nvoid    builtin_echo(t_elem *elem,int write_fd);\nvoid    builtin_cd(t_elem *elem,int write_fd);\nvoid    builtin_pwd(t_elem *elem,int write_fd);\nvoid    builtin_env(t_elem *elem,int write_fd);\nvoid    builtin_export(t_elem *elem,int write_fd);\nint     builtin_fd_gen(t_elem *elem);\n\n// env\n\nvoid\tedit_env_keys(int env_index, char *new_value, t_data *data);\n\n// export\n\nvoid export_set(t_elem  *elem);\nvoid export_sort_print(t_elem *elem, int write_fd);\nint export_argument_check(char *arg);\nvoid\tedit_env_keys(int env_index, char *new_value, t_data *data);\nint is_in_export_line(char *line, char **export_arr);\nint is_min_arr_line(char *line, char **envp,char **export_arr);\n\n#endif\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main.h b/main.h
--- a/main.h	(revision 6853f6dd6b6bbb8d73fe6b8052566bba0a3219be)
+++ b/main.h	(date 1636389057208)
@@ -43,9 +43,8 @@
 
 typedef struct s_data
 {
+    int exit_flag;
     char *path;
-    int std_in;
-    int std_out;
     char **envp;
     int exit_status;
     t_elem *elem_start;
@@ -65,6 +64,7 @@
 void    data_reboot(t_data *data, char *message, int mode);
 void    init(t_data *data, char **env);
 void    closing(t_data *data);
+void start_init(t_data *data, char **env);
 
 // exec
 
Index: execution/printing.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#include \"../main.h\"\n\n//rl_clear_history, rl_on_new_line,\n//rl_replace_line, rl_redisplay, add_history, printf,\n//malloc, free, write, open, read, close, fork, wait,\n//waitpid, wait3, wait4, signal, kill, exit, getcwd,\n//chdir, stat, lstat, fstat, unlink, execve, dup,\n//dup2, pipe, opendir, readdir, closedir, strerror,\n//perror, isatty, ttyname, ttyslot, ioctl, getenv,\n//tcsetattr, tcgetattr, tgetent, tgetflag, tgetnum,\n//tgetstr, tgoto, tputs\n\nvoid print_current_elem(t_elem *ptr,int id)\n{\n    if(ptr->cmd && *ptr->cmd)\n    {\n        dprintf(2,\">>> %p, type %d next %p\", ptr, ptr->type, ptr->next);\n        while(*ptr->cmd)\n        \tdprintf(2,\" %s \", *ptr->cmd++);\n        dprintf(2,\"\\n\");\n    }\n    else\n    \tdprintf(2,\">>> printelems: nocmd \\n\");\n}\n\nvoid print_elems(t_elem *ptr)\n{\n    int id = 1;\n    dprintf(2,\"\\n\");\n    while(ptr)\n    {\n        print_current_elem(ptr, id++);\n        if(ptr->next == NULL)\n            break;\n        ptr = ptr->next;\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/execution/printing.c b/execution/printing.c
--- a/execution/printing.c	(revision 6853f6dd6b6bbb8d73fe6b8052566bba0a3219be)
+++ b/execution/printing.c	(date 1636389474277)
@@ -14,7 +14,7 @@
 {
     if(ptr->cmd && *ptr->cmd)
     {
-        dprintf(2,">>> %p, type %d next %p", ptr, ptr->type, ptr->next);
+        dprintf(2,">>> %p, type %d prev %p next %p", ptr, ptr->type,ptr->prev, ptr->next);
         while(*ptr->cmd)
         	dprintf(2," %s ", *ptr->cmd++);
         dprintf(2,"\n");
